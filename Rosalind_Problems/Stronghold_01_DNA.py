#A string is simply an ordered collection of symbols selected from some alphabet and formed into
# a word; the length of a string is the number of symbols that it contains.

# An example of a length 21 DNA string (whose alphabet contains the symbols 'A', 'C', 'G', and 'T')
# is "ATGCTTCAGAAAGGTCTTACG."

# Given: A DNA string s of length at most 1000 nt.

# Return: Four integers (separated by spaces) counting the respective number of times that the symbols
#         'A', 'C', 'G', and 'T' occur in s.

# Sample dataset : AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC

# Sample output : 20 12 17 21

# 딕셔너리를 쓰면 안되나봐
# dna = '''GTTACAAAGACCGGGGGGCACCCATATGACGTGATCGTCTGGACAAGAACGGAAACGAACAGTATGCCTTCCGTTAATCCACATAGGAGGCAATGAATAGCTATACCACCCGTCCATCGTTGAGGGCTTCTTAGTCGCATCGTCTACTTAGTCATGTTAGTGCTTCCCAACGGGCTGCCTGCTAGATGATCTAGAAAAAACTTCATCACAGTGCTTTCCTTGTCTAGTGGCCCATAGGCAGAAACACCTGGTGGTCGGATCGTCGTACGCCTGTTACGCATAGCTCCTACGTGTTGGTGCGGTGGTCCATCGGTTAAATGATAGTATTAGTGTAGATTCGTACGGGTGTATTTAGATCTGTTCGTCAGAGACGAAGAACGAAACGCCTTAGATGATTATAAAATGAGAAGCGATCGCCTGTGTGGGAGTTTCCACATGGCCGTTGCGAGTCAATATGGAGGGGACTTGACGAGGACGGCTCACAGGCCGCTTCTAGCAAGCCTATGTCCAGTAAACCTTCAACAACCAGGTTCACGACGTTGTATATTGTGTTTGCTAATTTTGTTCAGTACCTCTTGGCCACTCCGAGGTATCGTAGGTATTGCAACCCAAGCGACTTGCGGGTAAAAGGTGTACGGCGTGTCGCCGTTTTATCTACATTGCGCGCGTGACAGGGTAGGTGGTTGTGATTATGAGTACTCGTCGAATGCGCGAGGCGTAACGCGTCAGCATAACTCAAACCCGCATCCTAGTACAAGCCGCAAAAAGAGATATTAAGAGAATGGAAATTGTGATGATGCAGCGCCCCAGGTTAAGTTGAAAGAAATTTTGGTGAGCAACATTTCGAACTGGAAAGGGTGAGGTTACTCCATCATATGTGGTCTGCATTATAGAAGTTGCATGATGGGTCGAAGACTAGTG'''
# s = {'A': 0, 'C': 0, 'G': 0, 'T': 0}
# # for i in dna:
# #     if "A" in dna:
# #         s['A']+=1
# #     elif "C" in dna:
# #         s['C']+=1
# #     elif "G" in dna:
# #         s['G']+=1
# #     elif "T" in dna:
# #         s['T']+=1
#
# #len을 썼더니 TypeError: 'int' object is not iterable 에러 떠서 range로 바꿈
# for a in range(len(dna)):
#     if dna[a] in s.keys():# dict키값들을 가져옴
#         s[dna[a]] += 1
#     else:
#         s[dna[a]] += 0
#
# print(s['A'],s['C'],s['G'],s['T'])
#
# # 딕셔너리에 있는 모든 벨류값 가져오기 .values()
#
# # sequence = '''
# # 	GTTACAAAGACCGGGGGGCACCCATATGACGTGATCGTCTGGACAAGAACGGAAACGAACAGTATGCCTTCCGTTAATCCACATAGGAGGCAATGAATAGCTATACCACCCGTCCATCGTTGAGGGCTTCTTAGTCGCATCGTCTACTTAGTCATGTTAGTGCTTCCCAACGGGCTGCCTGCTAGATGATCTAGAAAAAACTTCATCACAGTGCTTTCCTTGTCTAGTGGCCCATAGGCAGAAACACCTGGTGGTCGGATCGTCGTACGCCTGTTACGCATAGCTCCTACGTGTTGGTGCGGTGGTCCATCGGTTAAATGATAGTATTAGTGTAGATTCGTACGGGTGTATTTAGATCTGTTCGTCAGAGACGAAGAACGAAACGCCTTAGATGATTATAAAATGAGAAGCGATCGCCTGTGTGGGAGTTTCCACATGGCCGTTGCGAGTCAATATGGAGGGGACTTGACGAGGACGGCTCACAGGCCGCTTCTAGCAAGCCTATGTCCAGTAAACCTTCAACAACCAGGTTCACGACGTTGTATATTGTGTTTGCTAATTTTGTTCAGTACCTCTTGGCCACTCCGAGGTATCGTAGGTATTGCAACCCAAGCGACTTGCGGGTAAAAGGTGTACGGCGTGTCGCCGTTTTATCTACATTGCGCGCGTGACAGGGTAGGTGGTTGTGATTATGAGTACTCGTCGAATGCGCGAGGCGTAACGCGTCAGCATAACTCAAACCCGCATCCTAGTACAAGCCGCAAAAAGAGATATTAAGAGAATGGAAATTGTGATGATGCAGCGCCCCAGGTTAAGTTGAAAGAAATTTTGGTGAGCAACATTTCGAACTGGAAAGGGTGAGGTTACTCCATCATATGTGGTCTGCATTATAGAAGTTGCATGATGGGTCGAAGACTAGTG
# # '''
# #
# s = [0, 0, 0, 0]
#
# file = input("")
# f = open(file ,mode='r')
# sequence = f.read()
#
# for base in sequence:
#     if base == 'A':
#         s[0] += 1
#     elif base == 'C':
#         s[1] += 1
#     elif base == 'G':
#         s[2] += 1
#     elif base == 'T':
#         s[3] += 1
# f.close
# #
# # print(s[0], s[1], s[2], s[3])
# A = 0
# T = 0
# G = 0
# C = 0
#
# for nt in sequence:
#         if "A" in nt:
#                 A += 1
#         elif "T" in nt:
#                 T += 1
#         elif "G" in nt:
#                 G += 1
#         else:
#                 C += 1
#
# print(A,C,G,T)

# dna = [0, 0, 0, 0]

s = 'ACTTTCAGCAGCTGGGCAACACCCTTTTCTCTCCGTATGGCTCGGTGTGGTTCTCCATCAAGAGGTTATTTCTCGAGACGTTTTTCTTGAAGCAGCCTACGTAATCGTATTGTACGCTGGACGACCAGGGTCGTCCACAGAGGTAGAACCGGCACCGACCATTATCTTCAGGGTCGACAGGAAGACGCCTTTCTGTAAGGTCACCGACGCCTGAAAGTAGCTATGATTTCGGGAGTAGCTGGCATCTGCACTAAGACCTCGAGATGAGTGGTACGCTATCATGGATTCCTGTGTCGTTGCTCGGTCAGCCTCGTACTCGTTGTAAGTAGGACAACTCGGAAGGGTACGATTGTCAATGGTAGTATCTGTCTATTGCCTTCTCATGTATCTACTCGTACGCACGGCTGGGACCTCAATACAAGAGGCTTCACCCGGGGGACCACTGGTGCATCACCCAGAATTAACTTTATCAGAAGCACTCCATCCGTCCCCTGGGACGCCGTAGGAATCGAAAAAAACAATCGGCACTATCCGACGCCATGTCGATACAAAAGTATTCTGGCCTGACCTGAGAGCTGGGAATTACGCTTGTAACAAAGCCCGCATATCGGGTTTGCTGCATAGCGCCGGTTCACTGAAATCTATCTTGCGAGGGTCTCGTAGCAAGGTGATCAGCTCGCCCGATGGAACCGAGACCTAGGATGCCCAACCCATTGGGAGAAGCTAGCATCAACACCGCTCAGAGAATCTCTGTTAGCTTGATCTTATCCCCGCCTTACTATTGTGTGTGCGAAGGGGGGACTTATGGGCGCCTTGCGAAGCTCATGAAGAATTTGCGCAGGATAACGTGACTCATACCAATAGACCGTAGTCCTGTTACATCACCGTACGCAACTTACAGGTTGATGTACTCAGGCCTGTACCCTAATGATTAAGTGCTTATGCCGTTACGGTACTTATTGCAATGAGG'
s.upper()
for i in range(len(s)):
    if s[i] == 'A':
        dna[0] += 1
    elif s[i] == 'C':
        dna[1] += 1
    elif s[i] == 'G':
        dna[2] += 1
    elif s[i] == 'T':
        dna[3] += 1

print(dna[0], dna[1], dna[2], dna[3])

print(s.count('A'), s.count('C'), s.count('G'), s.count('T'))
print(s.count('A'), s.count('C'), s.count('G'), s.count('T'), sep=' ')

# 대박... 답을 넣는 거였어...